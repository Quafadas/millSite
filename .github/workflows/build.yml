on: [push, pull_request]

permissions:
  id-token: write
  pages: write
  contents: read

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: actions/setup-java@main
        with:
          java-version: 17
          distribution: 'temurin'
      - run: ./millw plugin.compile
      - run: ./millw plugin.unit
      - run: ./millw plugin.publishLocal

  publish:
    if: github.repository == 'Quafadas/millSite' && contains(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: actions/setup-java@main
        with:
          distribution: 'temurin'
          java-version: 21

      # - name: Setup GPG secrets
      #   run: |
      #     gpg --version
      #     cat <(echo "${{ secrets.GPG_SECRET_KEY }}") | base64 --decode | gpg --batch --import
      #     gpg --list-secret-keys --keyid-format LONG

      - name: Publish to Maven Central
        run: ./millw -i mill.scalalib.PublishModule/publishAll --sonatypeUri https://s01.oss.sonatype.org/service/local
        env:
          MILL_PGP_PASSPHRASE: ${{ secrets.MILL_PGP_PASSPHRASE }}
          MILL_PGP_SECRET_BASE64: ${{ secrets.MILL_PGP_SECRET_BASE64 }}
          MILL_SONATYPE_PASSWORD: ${{ secrets.MILL_SONATYPE_PASSWORD }}
          MILL_SONATYPE_USERNAME: ${{ secrets.MILL_SONATYPE_USERNAME }}
        #  --sonatypeCreds "${{ secrets.SONATYPE_CREDS }}" --gpgArgs "--passphrase=${{ secrets.GPG_SECRET_KEY_PASS}},--batch,--yes,-a,-b,--pinentry-mode,loopback" --readTimeout 600000 --awaitTimeout 600000 --release true --signed true

  site:
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@main
        with:
          java-version: 21
          distribution: 'temurin'
      - uses: actions/checkout@main
        with:
          fetch-depth: 0
          fetch-tags: true
      - run: ./millw site.docJar
      - name: Setup Pages
        uses: actions/configure-pages@main
      - uses: actions/upload-artifact@main
        with:
          name: page
          path: out/site/docJar.dest/javadoc/
          if-no-files-found: error

  deploy:
    needs: site
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@main
      with:
        name: page
        path: .
    - uses: actions/configure-pages@main
    - uses: actions/upload-pages-artifact@main
      with:
        path: .
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@main